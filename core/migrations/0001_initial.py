# Generated by Django 4.2 on 2023-05-10 02:21

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[(1, "Admin"), (2, "Staff")], default=1, max_length=255
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Categorie",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name="Cliente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dni", models.CharField(max_length=50)),
                ("nombres", models.CharField(max_length=50)),
                ("apellidos", models.CharField(max_length=50)),
                (
                    "email",
                    models.EmailField(max_length=50, verbose_name="Email del Cliente"),
                ),
                (
                    "celular",
                    models.CharField(max_length=50, verbose_name="Numero del Cliente"),
                ),
                ("pais", models.CharField(default="Usa", max_length=50)),
                ("ciudad", models.CharField(default="Miami", max_length=180)),
                ("direccion", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                ("transaction_id", models.AutoField(primary_key=True, serialize=False)),
                ("date_ordered", models.DateTimeField(auto_now_add=True)),
                ("complete", models.BooleanField(default=False)),
                (
                    "cliente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.cliente",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(blank=True, default=0, null=True)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.order",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Products",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("product_name", models.CharField(max_length=255)),
                ("price", models.CharField(max_length=7)),
                ("product_description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("activo", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "categories_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.categorie",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Proveedor",
            fields=[
                ("auth_user_id", models.AutoField(primary_key=True, serialize=False)),
                ("profile_pic", models.FileField(default="", upload_to="")),
                ("company_name", models.CharField(max_length=255)),
                ("address", models.TextField()),
                (
                    "email",
                    models.EmailField(
                        max_length=50, verbose_name="Email del Proveedor"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=50, verbose_name="Numero del Provedor"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "cantidad_stock",
                    models.IntegerField(default=0, verbose_name="Cantidad del Stock"),
                ),
                ("descripcion", models.CharField(max_length=255)),
                ("precio", models.CharField(max_length=7)),
                (
                    "products",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.products",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StaffUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("profile_pic", models.FileField(default="", upload_to="")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "auth_user_id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductMedia",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("media_type", models.CharField(max_length=255)),
                ("media_content", models.FileField(upload_to="")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.IntegerField(default=1)),
                (
                    "product_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.products",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payments",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "payments",
                    models.IntegerField(
                        choices=[
                            (1, "Dolares Efectivo"),
                            (2, "Moneda Local"),
                            (3, "Moneda o Tokens Digitales"),
                            (4, "Otras Wallets"),
                        ],
                        default="Dolares $",
                        verbose_name="Metodo de Pago",
                    ),
                ),
                ("status", models.BooleanField(blank=True, default=False, null=True)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                (
                    "orderitem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.orderitem"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderStock",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("cantidad", models.IntegerField(default=0, verbose_name="Cantidad")),
                ("price", models.IntegerField(default=0, verbose_name="Precio")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "rating",
                    models.IntegerField(
                        choices=[
                            (1, "Anulada"),
                            (2, "Coordinado Con Proveedores"),
                            (3, "Proveedor No Responde"),
                            (4, "Proceso de Activacion"),
                            (5, "Proceso Finalizado"),
                        ],
                        default="En Proceso",
                        verbose_name="Rating del Stock-Proveedor",
                    ),
                ),
                (
                    "Proveedor_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.proveedor",
                    ),
                ),
                (
                    "product_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.stock",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="orderitem",
            name="product",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="core.stock"
            ),
        ),
        migrations.CreateModel(
            name="OrderDeliveryStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "qr_code",
                    models.ImageField(
                        blank=True, editable=False, null=True, upload_to="qrcodes/"
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (1, "Anulada"),
                            (2, "Coordinado Con Proveedores"),
                            (3, "Cliente No Responde"),
                            (4, "Proceso de Activacion"),
                            (5, "Proceso Finalizado"),
                        ],
                        verbose_name="Rating del Servicio",
                    ),
                ),
                ("status_message", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.payments"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClienteStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[
                            (1, "Cliente Con Deuda"),
                            (2, "Cliente Desiste"),
                            (3, "Cliente Sin Oferta"),
                            (4, "Cliente Vigente"),
                        ],
                        default="En Proceso",
                        verbose_name="Rating del Cliente",
                    ),
                ),
                (
                    "cliente_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.cliente",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AdminUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("profile_pic", models.FileField(default="", upload_to="")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "auth_user_id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
